{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","containerRef","useRef","useState","currentIndex","setCurrentIndex","currentStep","setStep","currentframeSize","setFrame","currentitemWidth","setWidth","currentanimationDuration","setDuration","useEffect","container","current","style","transition","transform","className","width","ref","length","map","url","index","src","alt","height","visibility","type","onClick","newIndex","Math","max","disabled","min","htmlFor","id","value","onChange","e","Number","target","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07cb7a81.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './Carousel.scss';\n\ninterface Props{\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nconst Carousel: React.FC<Props> = (\n  {\n    images,\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n  },\n) => {\n  const containerRef = useRef(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentStep, setStep] = useState(step);\n  const [currentframeSize, setFrame] = useState(frameSize);\n  const [currentitemWidth, setWidth] = useState(itemWidth);\n  const [currentanimationDuration, setDuration] = useState(animationDuration);\n\n  const handleNext = () => {\n    const newIndex = currentIndex + currentStep;\n\n    setCurrentIndex(Math.min(newIndex, images.length - currentframeSize));\n  };\n\n  const handlePrevious = () => {\n    const newIndex = currentIndex - currentStep;\n\n    setCurrentIndex(Math.max(newIndex, 0));\n  };\n\n  useEffect(() => {\n    const container = containerRef.current as HTMLDivElement | null;\n\n    if (container) {\n      container.style.transition = `transform ${currentanimationDuration}ms ease-in-out`;\n      container.style.transform = `translateX(-${currentIndex * currentitemWidth}px)`;\n    }\n  }, [currentIndex, currentitemWidth, currentanimationDuration]);\n\n  return (\n    <>\n      <div\n        className=\"Carousel\"\n        style={\n          {\n            width: `${currentframeSize * currentitemWidth}px`,\n          }\n        }\n      >\n        <ul\n          className=\"Carousel__list\"\n          ref={containerRef}\n          style={\n            {\n              width: `${images.length * currentitemWidth}px`,\n              transform: `translateX(-${(currentitemWidth * currentStep)}px)`,\n              transition: `transform ${currentanimationDuration}ms ease-in-out`,\n            }\n          }\n        >\n          {\n            images.map((url, index) => (\n              <li\n                className=\"Carousel__item\"\n                key={+index}\n                style={{\n                  width: `${currentitemWidth}px`,\n                }}\n              >\n                <img\n                  className=\"Carousel__image\"\n                  key={+index}\n                  data-cy=\"itemId\"\n                  src={url}\n                  alt={`${index}`}\n                  width={currentitemWidth}\n                  height={currentitemWidth}\n                  style={{\n                    visibility: index\n                    >= currentIndex\n                    && index < currentIndex + currentframeSize\n                      ? 'visible' : 'hidden',\n                  }}\n                />\n              </li>\n            ))\n          }\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={handlePrevious}\n          disabled={currentIndex === 0}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={handleNext}\n          disabled={currentIndex + currentframeSize >= images.length}\n        >\n          Next\n        </button>\n      </div>\n\n      <label htmlFor=\"itemId\">\n        Item Width:\n        <input\n          type=\"number\"\n          id=\"itemId\"\n          value={currentitemWidth}\n          onChange={(e) => setWidth(Number(e.target.value))}\n        />\n      </label>\n      <label htmlFor=\"frameId\">\n        Frame Size:\n        <input\n          type=\"number\"\n          id=\"frameId\"\n          value={currentframeSize}\n          onChange={(e) => setFrame(Number(e.target.value))}\n        />\n      </label>\n      <label htmlFor=\"stepId\">\n        Step:\n        <input\n          type=\"number\"\n          id=\"stepId\"\n          value={currentStep}\n          onChange={(e) => setStep(Number(e.target.value))}\n        />\n      </label>\n      <label>\n        Animation Duration:\n        <input\n          type=\"number\"\n          value={currentanimationDuration}\n          onChange={(e) => setDuration(Number(e.target.value))}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}